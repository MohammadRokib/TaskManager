@using TaskManager.Models.ViewModels
@model List<TaskDashboardViewModel>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Capital Market Solutions</h1>
    @* <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p> *@
</div>
<div class="container">
    <div class="row pt-4 pb-2">
        <div class="col-6">
            <h2 class="text-primary">Task List</h2>
        </div>

        <div class="col-6 text-end">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTaskModal">
                <i class="bi bi-plus-square-fill"></i> Add New Task
            </button>
        </div>
    </div>

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th class="text-center">
                    Title
                </th>
                <th class="text-center">
                    Client Name
                </th>
                <th class="text-center">
                    Responsible
                </th>
                <th class="text-center">
                    Issue Time
                </th>
                <th class="text-center">
                    Status
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach(var obj in Model) 
            {
                <tr>
                    <td>@obj.TaskTitle</td>
                    <td class="text-center">@obj.ClientFullname</td>
                    <td class="text-center">@obj.AssignedTo</td>
                    <td class="text-center">@obj.IssueTime.ToString("dd MMM yyyy")</td>
                    <td class="text-center">@obj.Status</td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_AddTaskModal" model="new AddTaskViewModel { Status = TaskManager.Models.Constants.TaskStatus.New, IsParent = true, UserId = ViewBag.UserId ?? string.Empty }" />
</div>